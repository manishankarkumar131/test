[tool.poetry]
name = "cwan-cortex-ws"
version = "0.1.0"
description = "Python webservice that provides high-level language model interactions"
authors = ["Gabriel Anderson <gabrielanderson@clearwateranalytics.com>"]
readme = "README.md"
packages = [
  { include = "cwan_cortex_ws", from = "apps" },
  { include = "cwan_cortex", from = "lib" },
  { include = "test_utils", from = "tests" },
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
pydantic = "^2.4"
fastapi = "0.109.2"
uvicorn = { version = "0.23.2", extras = ["standard"] }
langchain = "0.2.5"
tenacity = "8.2.2"
autodynatrace = "2.0.0"
loguru = "0.7.0"
toolz = "0.12.0"
pymssql = "2.2.7"
pypdf2 = "^3.0.1"
pymupdf = "^1.23.6"
pdfplumber = "^0.10.3"
boto3 = "^1.28"
boto3-stubs = { version = "1.28.57", extras = ["boto3", "secretsmanager"] }
aiocache = "0.12.2"
cachetools = "5.3.1"
tabulate = "0.9.0"
pandas = "2.0.3"
pypdf = "^3.12.1"
# forced to pin debugpy due to https://github.com/microsoft/debugpy/issues/1345
debugpy = "1.6.7"
atlassian-python-api = "^3.41.0"
fuzzywuzzy = "^0.18.0"
python-levenshtein = "^0.23.0"
async-lru = ">=2.0.4"
pyjwt = "^2.1.0"
requests-cache = "^1.1.1"
numexpr = "^2.8.7"
anthropic-bedrock = "^0.5.6"
langfuse = "2.36.2"
pymysql = "^1.1.1"
sql-metadata = "^2.10.0"
qdrant-client = "^1.6.9"
openapi-pydantic = "0.3.2"
openpyxl = "^3.1.2"
python-dateutil = "^2.8.2"
predibase  = {version = "^2024.2.8", markers = "sys_platform != 'darwin'"}
smart-open = {version = "^7.0.4", extras = ["s3"]}
galileo-observe = "^1.0.1"
snowflake-connector-python = "^3.10.0"
yfinance = {version = "^0.2.41", extras = ["nospam", "repair"]}
ciam-integration-py="1.3.0"
responses="^0.23.3"
oidc-token-test-fixtures="1.0.0"
langchain-community = "0.2.5"
langchain-openai = "^0.1.8"
httpx = "^0.27.0"
html2text = "^2024.2.26"

[tool.poetry.group.dev.dependencies]
ruff = "0.1.3"
black = "23.7.0"
python-dotenv = { version = "1.0.0", extras = ["cli"] }
pytest = "7.4.0"
pytest-asyncio = "0.21.1"
pytest-cov = "4.1.0"
pytest-dotenv = "0.5.2"
invoke = "2.2.0"
ipykernel = "6.23.3"
ipywidgets = "8.0.6"
jupyterlab = "4.0.2"
# Pinned for now, since the latest version (1.1.348) is ignore `type: ignore` comments.
pyright = "1.1.345"
hypothesis = "6.88.1"
respx = "^0.20.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "cwan"
url = "https://artifactory.cwantools.io/api/pypi/python-all/simple"
priority = "primary"

[[tool.poetry.source]]
name = "PyPI"
priority = "explicit"

[tool.pyright]
typeCheckingMode = "basic"
include = ["apps", "lib", "tasks.py"]
exclude = ["**/__pycache__", ".pytest_cache", "tests"]

[tool.ruff]
pydocstyle.convention = "google"
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
  "D", # pydoc-style
]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
  "F841", # do not remove unused variables
  "D401", # don't require imperative mood
  "D100", # don't require docstrings in public modules
  "D101", # don't require docstrings in public classes
  "D102", # don't require docstrings in public methods
  "D103", # don't require docstrings in public function
  "D104", # don't require docstrings in public package
]

[tool.ruff.flake8-quotes]
inline-quotes = "double"
multiline-quotes = "double"

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "6.0"
addopts = "--cov=. --cov-report html --cov-report xml --cov-report lcov"
testpaths = ["tests"]
markers = [
    "integration: marks tests as using outside functionality (deselect with '-m \"not integration\"')",
]

[tool.coverage.run]
omit = ["tasks.py", "tests/**/*.py", ".venv/*", "*/__init__.py"]
source = ["lib", "apps"]
branch = true

[tool.coverage.report]
ignore_errors = true
exclude_lines = ["ignore_in_test_coverage"]
exclude_also = [
  # Don't complain about missing debug-only code:
  "def __repr__",
  "if self\\.debug",

  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",

  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",

  # Don't complain about abstract methods, they aren't run:
  "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage/coverage_html_report"

[tool.coverage.lcov]
output = "coverage/coverage.lcov"

[tool.coverage.xml]
output = "coverage/coverage.xml"
